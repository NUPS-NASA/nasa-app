{"openapi":"3.1.0","info":{"title":"nups-api","description":"Async FastAPI service that manages users, extended profile data, and follow relationships.","contact":{"name":"nups-api maintainers","url":"https://github.com/tgim4253/nups-api"},"version":"1.0.0"},"paths":{"/":{"get":{"tags":["health"],"summary":"Service health check","description":"Expose basic runtime metadata for uptime monitoring.","operationId":"read_root__get","responses":{"200":{"description":"Current service health details.","content":{"application/json":{"schema":{"additionalProperties":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"object","title":"Response Read Root  Get"}}}}}}},"/users":{"get":{"tags":["users"],"summary":"List users","description":"Return every registered user with eager-loaded profile data.","operationId":"list_users_users_get","responses":{"200":{"description":"All users ordered by identifier.","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/UserRead"},"type":"array","title":"Response List Users Users Get"}}}}}},"post":{"tags":["users"],"summary":"Create a user","description":"Persist a new user with optional profile data.","operationId":"create_user_users_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserCreate"}}},"required":true},"responses":{"201":{"description":"The newly created user including profile data, when present.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRead"}}}},"409":{"description":"Email already exists."},"422":{"description":"Validation error when the payload is malformed."}}}},"/users/{user_id}":{"get":{"tags":["users"],"summary":"Retrieve a user","description":"Retrieve a user by identifier.","operationId":"get_user_users__user_id__get","parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"integer","title":"User Id"}}],"responses":{"200":{"description":"The user resource with profile data when available.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRead"}}}},"404":{"description":"User not found."},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"put":{"tags":["users"],"summary":"Replace a user's attributes","description":"Update core user fields and optionally their profile.","operationId":"update_user_users__user_id__put","parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"integer","title":"User Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserUpdate"}}}},"responses":{"200":{"description":"The updated user resource.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRead"}}}},"404":{"description":"User not found."},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["users"],"summary":"Delete a user","description":"Remove a user and their profile.","operationId":"delete_user_users__user_id__delete","parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"integer","title":"User Id"}}],"responses":{"204":{"description":"Successful Response"},"404":{"description":"User not found."},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/{user_id}/profile":{"get":{"tags":["users"],"summary":"Retrieve a user's profile","description":"Return a user's profile, ensuring both user and profile exist.","operationId":"get_user_profile_users__user_id__profile_get","parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"integer","title":"User Id"}}],"responses":{"200":{"description":"The profile resource for the requested user.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserProfileRead"}}}},"404":{"description":"User or profile missing."},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"put":{"tags":["users"],"summary":"Upsert a user's profile","description":"Create or update a user's profile and return the current representation.","operationId":"update_user_profile_users__user_id__profile_put","parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"integer","title":"User Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserProfileUpdate"}}}},"responses":{"200":{"description":"The updated profile resource.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserProfileRead"}}}},"404":{"description":"User not found."},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/{user_id}/following":{"post":{"tags":["users"],"summary":"Follow another user","description":"Create a follow relationship where the path user follows another user.","operationId":"follow_user_users__user_id__following_post","parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"integer","title":"User Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FollowCreate"}}}},"responses":{"201":{"description":"The follow relationship that was created.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FollowRead"}}}},"400":{"description":"Users cannot follow themselves."},"404":{"description":"User or target user not found."},"409":{"description":"Follow relationship already exists."},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["users"],"summary":"List following","description":"Return users that the specified account is following.","operationId":"list_following_users__user_id__following_get","parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"integer","title":"User Id"}}],"responses":{"200":{"description":"Users that the requested account is following.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserRead"},"title":"Response List Following Users  User Id  Following Get"}}}},"404":{"description":"User not found."},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/{user_id}/following/{following_id}":{"delete":{"tags":["users"],"summary":"Unfollow a user","description":"Delete the follow relationship between two users.","operationId":"unfollow_user_users__user_id__following__following_id__delete","parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"integer","title":"User Id"}},{"name":"following_id","in":"path","required":true,"schema":{"type":"integer","title":"Following Id"}}],"responses":{"204":{"description":"Successful Response"},"404":{"description":"Follow relationship not found."},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/{user_id}/followers":{"post":{"tags":["users"],"summary":"Add a follower","description":"Create a follow relationship where another user follows the path user.","operationId":"add_follower_users__user_id__followers_post","parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"integer","title":"User Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FollowerCreate"}}}},"responses":{"201":{"description":"The follow relationship that was created.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FollowRead"}}}},"400":{"description":"Users cannot follow themselves."},"404":{"description":"User or follower not found."},"409":{"description":"Follow relationship already exists."},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["users"],"summary":"List followers","description":"Return users that follow the specified account.","operationId":"list_followers_users__user_id__followers_get","parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"integer","title":"User Id"}}],"responses":{"200":{"description":"Users that follow the requested account.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserRead"},"title":"Response List Followers Users  User Id  Followers Get"}}}},"404":{"description":"User not found."},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/{user_id}/followers/{follower_id}":{"delete":{"tags":["users"],"summary":"Remove a follower","description":"Delete the follow relationship where the path user is followed by another user.","operationId":"remove_follower_users__user_id__followers__follower_id__delete","parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"integer","title":"User Id"}},{"name":"follower_id","in":"path","required":true,"schema":{"type":"integer","title":"Follower Id"}}],"responses":{"204":{"description":"Successful Response"},"404":{"description":"Follow relationship not found."},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"FollowCreate":{"properties":{"following_id":{"type":"integer","title":"Following Id"}},"additionalProperties":false,"type":"object","required":["following_id"],"title":"FollowCreate","description":"Request payload for following another user."},"FollowRead":{"properties":{"follower_id":{"type":"integer","title":"Follower Id"},"following_id":{"type":"integer","title":"Following Id"},"created_at":{"type":"string","format":"date-time","title":"Created At"}},"type":"object","required":["follower_id","following_id","created_at"],"title":"FollowRead"},"FollowerCreate":{"properties":{"follower_id":{"type":"integer","title":"Follower Id"}},"additionalProperties":false,"type":"object","required":["follower_id"],"title":"FollowerCreate","description":"Request payload for adding a follower to a user."},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"UserCreate":{"properties":{"email":{"type":"string","format":"email","title":"Email"},"password_hash":{"type":"string","title":"Password Hash"},"profile":{"anyOf":[{"$ref":"#/components/schemas/UserProfileCreate"},{"type":"null"}]}},"type":"object","required":["email","password_hash"],"title":"UserCreate"},"UserProfileCreate":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"bio":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Bio"},"avatar_url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Avatar Url"}},"type":"object","title":"UserProfileCreate"},"UserProfileRead":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"bio":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Bio"},"avatar_url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Avatar Url"},"user_id":{"type":"integer","title":"User Id"}},"type":"object","required":["user_id"],"title":"UserProfileRead"},"UserProfileUpdate":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"bio":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Bio"},"avatar_url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Avatar Url"}},"additionalProperties":false,"type":"object","title":"UserProfileUpdate","description":"Fields that can be patched on an existing profile."},"UserRead":{"properties":{"email":{"type":"string","format":"email","title":"Email"},"id":{"type":"integer","title":"Id"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"type":"string","format":"date-time","title":"Updated At"},"profile":{"anyOf":[{"$ref":"#/components/schemas/UserProfileRead"},{"type":"null"}]}},"type":"object","required":["email","id","created_at","updated_at"],"title":"UserRead"},"UserUpdate":{"properties":{"email":{"anyOf":[{"type":"string","format":"email"},{"type":"null"}],"title":"Email"},"password_hash":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Password Hash"},"profile":{"anyOf":[{"$ref":"#/components/schemas/UserProfileUpdate"},{"type":"null"}]}},"additionalProperties":false,"type":"object","title":"UserUpdate"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}},"tags":[{"name":"health","description":"Liveness and readiness probes for infrastructure monitoring."},{"name":"users","description":"CRUD operations for user accounts, profile records, and follow relationships."}]}